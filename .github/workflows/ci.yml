name: CI

on:
  push:
    branches-ignore:
      - main

jobs:
  be-check:
    name: Check backend source
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            fenn-be/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path fenn-be/Cargo.toml
  be-test:
    name: Run backend test
    runs-on: ubuntu-20.04
    needs: be-check
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            fenn-be/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path fenn-be/Cargo.toml
  be-fmt:
    name: Run fmt
    runs-on: ubuntu-20.04
    needs: be-check
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            fenn-be/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path fenn-be/Cargo.toml -- --check
  be-clippy:
    name: Run clippy
    runs-on: ubuntu-20.04
    needs: be-check
    steps:
      - uses: actions/checkout@v2
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            fenn-be/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path fenn-be/Cargo.toml -- -D warnings
